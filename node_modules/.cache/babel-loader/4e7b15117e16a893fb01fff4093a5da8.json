{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Unauth/Register.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { theme } from \"../../theme\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { login, verifyLoggedIn } from \"../../../actions/auth-actions\";\n\nrequire(\"dotenv/config\");\n\nconst host = \"http://localhost:3005\"; //const host = process.env.API_HOST;\n\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.checkExists = event => {\n      const itemName = event.target.name;\n      const item = event.target.value;\n      axios.post(host + \"/api/user/\" + itemName + \"exists\", itemName === \"email\" ? {\n        email: item\n      } : {\n        username: item\n      }).then(response => {\n        if (response.data === true) {\n          //IF RESPONSE TRUE: SET ERROR MESSAGE\n          itemName === \"email\" ? this.setState({\n            emailError: \"Email already exists\"\n          }) : this.setState({\n            usernameExists: \"Username already exists\"\n          });\n        } else {\n          //IF RESPONSE FALSE: SET NO OR REMOVE ERROR MESSAGE\n          itemName === \"email\" ? this.setState({\n            emailExists: \"\"\n          }) : this.setState({\n            usernameExists: \"\"\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.validate = event => {\n      //REGEX: AN UPPER, LOWER, AND NUMERIC\n      let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,100}$/; //IF INPUT IS EMAIL CHECKS THAT IT CONTAINS \"@\" AND \".\"\n\n      if (event.target.name === \"email\") {\n        if (this.state.email && (!this.state.email.includes(\"@\") || !this.state.email.includes(\".\"))) {\n          this.setState({\n            emailError: \"Invalid email\"\n          });\n        } else {\n          this.setState({\n            emailError: \"\"\n          });\n        }\n      } //IF INPUT IS FIRST PASSWORD, CHECKS THAT IT MATCHES REGEX\n\n\n      if (event.target.name === \"password1\") {\n        if (this.state.password1 && !this.state.password1.match(passwordCheck)) {\n          this.setState({\n            password1Error: \"Password must contain: one lowercase, one uppercase, one numeric character, and be at least 6 characters in length.\"\n          });\n        } else {\n          this.setState({\n            password1Error: \"\"\n          });\n        }\n      } //IF INPUT IS SECOND PASSWORD, CHECKS THAT IT MATCHES FIRST PASSWORD\n\n\n      if (event.target.name === \"password2\") {\n        if (this.state.password2 && this.state.password1 !== this.state.password2) {\n          this.setState({\n            password2Error: \"Passwords do not match\"\n          });\n        } else {\n          this.setState({\n            password2Error: \"\"\n          });\n        }\n      }\n    };\n\n    this.handleEmail = event => {\n      this.validate(event);\n      this.checkExists(event);\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      usernameExists: \"\",\n      emailExists: \"\",\n      emailError: \"\",\n      usernameError: \"\",\n      password1Error: \"\",\n      password2Error: \"\"\n    };\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n  } //STORES INPUT IN LOCAL STATE\n\n\n  // componentWillMount(){\n  //   this.props.verifyLoggedIn(true)\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mt: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Fade, Object.assign({\n      in: true\n    }, {\n      timeout: 750\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mb-3\",\n      icon: faLock,\n      style: {\n        color: \"#7da2a9\"\n      },\n      size: \"4x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Sign up\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"fname\",\n      name: \"firstName\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"firstName\",\n      label: \"First Name\",\n      autoFocus: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"lastName\",\n      label: \"Last Name\",\n      name: \"lastName\",\n      autoComplete: \"lname\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.usernameExists ? true : false,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      autoComplete: \"username\",\n      helperText: this.state.usernameExists,\n      onBlur: this.checkExists,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.emailExists || this.state.emailError ? true : false,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      helperText: this.state.emailExists + this.state.emailError,\n      onBlur: this.handleEmail,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.password1Error ? true : false,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password1\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password1\",\n      autoComplete: \"current-password\",\n      helperText: this.state.password1Error,\n      onBlur: this.validate,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: this.state.password2Error ? true : false,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password2\",\n      label: \"Re-enter password\",\n      type: \"password\",\n      id: \"password2\",\n      autoComplete: \"current-password\",\n      helperText: this.state.password2Error,\n      onBlur: this.validate,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      className: \"mt-3\",\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: \"mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/login\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password)),\n    verifyLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Unauth/Register.js"],"names":["React","axios","ThemeProvider","theme","Fade","Paper","Button","TextField","Link","Grid","Box","Typography","Container","FontAwesomeIcon","faLock","connect","login","verifyLoggedIn","require","host","Register","Component","constructor","props","handleChange","event","setState","target","name","value","checkExists","itemName","item","post","email","username","then","response","data","emailError","usernameExists","emailExists","catch","error","console","log","validate","passwordCheck","state","includes","password1","match","password1Error","password2","password2Error","handleEmail","firstName","lastName","usernameError","bind","render","timeout","color","handleSubmit","mapStateToProps","isLoginPending","isLoginSuccess","loginError","mapDispatchToProps","dispatch","password"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport { theme } from \"../../theme\";\n\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { connect } from \"react-redux\";\nimport { login, verifyLoggedIn } from \"../../../actions/auth-actions\";\n\nrequire(\"dotenv/config\");\n\nconst host = \"http://localhost:3005\";\n//const host = process.env.API_HOST;\n\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      usernameExists: \"\",\n      emailExists: \"\",\n      emailError: \"\",\n      usernameError: \"\",\n      password1Error: \"\",\n      password2Error: \"\"\n    };\n    this.validate = this.validate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n  }\n\n  //STORES INPUT IN LOCAL STATE\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  //CHECKS IF EMAIL/USERNAME ALREADY EXISTS\n  checkExists = event => {\n    const itemName = event.target.name;\n    const item = event.target.value;\n\n    axios\n      .post(\n        host + \"/api/user/\" + itemName + \"exists\",\n        itemName === \"email\" ? { email: item } : { username: item }\n      )\n      .then(response => {\n        if (response.data === true) {\n          //IF RESPONSE TRUE: SET ERROR MESSAGE\n          itemName === \"email\"\n            ? this.setState({\n                emailError: \"Email already exists\"\n              })\n            : this.setState({\n                usernameExists: \"Username already exists\"\n              });\n        } else {\n          //IF RESPONSE FALSE: SET NO OR REMOVE ERROR MESSAGE\n          itemName === \"email\"\n            ? this.setState({\n                emailExists: \"\"\n              })\n            : this.setState({\n                usernameExists: \"\"\n              });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  // CHECKS FOR VALID USER INPUTS, IF INVALID DISPLAYS ERROR MESSAGE\n  validate = event => {\n    //REGEX: AN UPPER, LOWER, AND NUMERIC\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,100}$/;\n\n    //IF INPUT IS EMAIL CHECKS THAT IT CONTAINS \"@\" AND \".\"\n    if (event.target.name === \"email\") {\n      if (\n        this.state.email &&\n        (!this.state.email.includes(\"@\") || !this.state.email.includes(\".\"))\n      ) {\n        this.setState({ emailError: \"Invalid email\" });\n      } else {\n        this.setState({ emailError: \"\" });\n      }\n    }\n\n    //IF INPUT IS FIRST PASSWORD, CHECKS THAT IT MATCHES REGEX\n    if (event.target.name === \"password1\") {\n      if (this.state.password1 && !this.state.password1.match(passwordCheck)) {\n        this.setState({\n          password1Error:\n            \"Password must contain: one lowercase, one uppercase, one numeric character, and be at least 6 characters in length.\"\n        });\n      } else {\n        this.setState({ password1Error: \"\" });\n      }\n    }\n\n    //IF INPUT IS SECOND PASSWORD, CHECKS THAT IT MATCHES FIRST PASSWORD\n    if (event.target.name === \"password2\") {\n      if (\n        this.state.password2 &&\n        this.state.password1 !== this.state.password2\n      ) {\n        this.setState({ password2Error: \"Passwords do not match\" });\n      } else {\n        this.setState({ password2Error: \"\" });\n      }\n    }\n  };\n\n  //VALIDATES EMAIL THEN CHECKS IF EMAIL EXISTS\n  handleEmail = event => {\n    this.validate(event);\n    this.checkExists(event);\n  };\n\n  // componentWillMount(){\n  //   this.props.verifyLoggedIn(true)\n  // }\n\n  render() {\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"sm\">\n          <ThemeProvider theme={theme}>\n            <Box mt={3}>\n              <Fade in={true} {...{ timeout: 750 }}>\n                <Paper className=\"p-5\">\n                  <div className=\"row\">\n                    <div className=\"col text-center\">\n                      <FontAwesomeIcon\n                        className=\"mb-3\"\n                        icon={faLock}\n                        style={{ color: \"#7da2a9\" }}\n                        size=\"4x\"\n                      />\n                      <Typography component=\"h1\" variant=\"h5\" className=\"mb-3\">\n                        Sign up\n                      </Typography>\n                    </div>\n                  </div>\n                  <form onSubmit={this.handleSubmit} noValidate>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <TextField\n                          autoComplete=\"fname\"\n                          name=\"firstName\"\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"firstName\"\n                          label=\"First Name\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <TextField\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"lastName\"\n                          label=\"Last Name\"\n                          name=\"lastName\"\n                          autoComplete=\"lname\"\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={this.state.usernameExists ? true : false}\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"username\"\n                          label=\"Username\"\n                          name=\"username\"\n                          autoComplete=\"username\"\n                          helperText={this.state.usernameExists}\n                          onBlur={this.checkExists}\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={\n                            this.state.emailExists || this.state.emailError\n                              ? true\n                              : false\n                          }\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          helperText={\n                            this.state.emailExists + this.state.emailError\n                          }\n                          onBlur={this.handleEmail}\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={this.state.password1Error ? true : false}\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          name=\"password1\"\n                          label=\"Password\"\n                          type=\"password\"\n                          id=\"password1\"\n                          autoComplete=\"current-password\"\n                          helperText={this.state.password1Error}\n                          onBlur={this.validate}\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={this.state.password2Error ? true : false}\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          name=\"password2\"\n                          label=\"Re-enter password\"\n                          type=\"password\"\n                          id=\"password2\"\n                          autoComplete=\"current-password\"\n                          helperText={this.state.password2Error}\n                          onBlur={this.validate}\n                          onChange={this.handleChange}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Button\n                      className=\"mt-3\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                      <Grid item className=\"mt-1\">\n                        <Link href=\"/login\" variant=\"body2\">\n                          Already have an account? Sign in\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </Paper>\n              </Fade>\n            </Box>\n          </ThemeProvider>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password)),\n    verifyLoggedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n"]},"metadata":{},"sourceType":"module"}