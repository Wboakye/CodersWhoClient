{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\nimport { connect } from 'react-redux';\nimport { Login } from './components/Login';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onUpdateUser = this.onUpdateUser.bind(this);\n  }\n\n  onUpdateUser(event) {\n    this.props.onUpdateUser(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"*\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/App.js"],"names":["React","Switch","Route","BrowserRouter","Provider","store","connect","Login","App","Component","constructor","props","onUpdateUser","bind","event","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAO;AACjB,SAAKH,KAAL,CAAWC,YAAX,CAAwBE,KAAK,CAACC,MAAN,CAAaC,KAArC;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,CADF,CADF;AAcD;;AA1B+B;;AA6BlC,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\nimport { connect } from 'react-redux'\nimport { Login } from './components/Login'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.onUpdateUser = this.onUpdateUser.bind(this);\n  }\n\n  onUpdateUser(event){\n    this.props.onUpdateUser(event.target.value)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"*\" component={Login} />\n            </Switch>\n          </BrowserRouter>\n        </Provider>\n      </div>\n      \n    );\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}