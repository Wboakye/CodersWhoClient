{"ast":null,"code":"import _objectSpread from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/LogRegReroute.js\";\nimport React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport store from \"../../redux/store\";\nimport axios from \"axios\";\nimport { setUser } from \"../../actions/user-actions\";\nimport { setLogged } from \"../../actions/auth-actions\";\n\nconst jwtDecode = require(\"jwt-decode\");\n\nconst host = \"http://localhost:3005\";\n\nconst LogRegReroute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\", \"isLoading\"]);\n\n  const _React$useState = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; //GET USER INFO, SAVE IN STORE\n\n\n  const getUser = () => {\n    let token = sessionStorage.getItem(\"CWJWT\");\n    let decodedToken = jwtDecode(token);\n    axios({\n      url: host + \"/api/user/profile\",\n      method: \"POST\",\n      headers: {\n        \"auth-token\": token\n      },\n      data: {\n        userId: decodedToken._id\n      }\n    }).then(response => {\n      store.dispatch(setUser(response.data.body));\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const checkJwtAndValidate = (...rest) => {\n    if (sessionStorage.getItem(\"CWJWT\")) {\n      let token = sessionStorage.getItem(\"CWJWT\");\n      axios({\n        url: host + \"/api/user/authenticate\",\n        method: \"POST\",\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(response => {\n        //IF AUTHENTICATED, GET AND STORE INFO\n        if (response.data.success === true) {\n          console.log(\"Token validated\");\n          getUser();\n        }\n\n        setState(_objectSpread({}, state, {\n          isAuthenticated: response.data.success\n        }));\n        store.dispatch(setLogged(true));\n        setState(_objectSpread({}, state, {\n          isLoading: false\n        }));\n        console.log(\"redirecting\");\n        return React.createElement(Redirect, {\n          to: \"/home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }).catch(function (error) {\n        alert(error);\n        setState({\n          isLoading: false\n        });\n        return React.createElement(Component, Object.assign({}, rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        isLoading: false\n      }));\n      return React.createElement(Component, Object.assign({}, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  };\n\n  const validate = (...rest) => {\n    //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n    if (store.getState().auth.isLoginSuccess) {\n      setState({\n        isAuthenticated: true,\n        isLoading: false\n      });\n      console.log(\"isAuthenticated true\");\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    } else {\n      //IF JWT AVAILABLE, VALIDATE\n      checkJwtAndValidate();\n    }\n  };\n\n  useEffect((...rest) => {\n    validate(...rest);\n  }, state, []);\n\n  if (state.isLoading) {}\n\n  if (!store.getState().auth.isLoginSuccess) {\n    return React.createElement(Component, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Redirect, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  });\n};\n\nexport { LogRegReroute };","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/LogRegReroute.js"],"names":["React","useEffect","Redirect","store","axios","setUser","setLogged","jwtDecode","require","host","LogRegReroute","Component","component","isAuthenticated","isLoading","rest","useState","state","setState","getUser","token","sessionStorage","getItem","decodedToken","url","method","headers","data","userId","_id","then","response","dispatch","body","catch","error","alert","checkJwtAndValidate","success","console","log","validate","getState","auth","isLoginSuccess"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport store from \"../../redux/store\";\nimport axios from \"axios\";\nimport { setUser } from \"../../actions/user-actions\";\nimport { setLogged } from \"../../actions/auth-actions\";\n\nconst jwtDecode = require(\"jwt-decode\");\n\nconst host = \"http://localhost:3005\";\n\nconst LogRegReroute = ({\n  component: Component,\n  isAuthenticated,\n  isLoading,\n  ...rest\n}) => {\n  const [state, setState] = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  });\n\n  //GET USER INFO, SAVE IN STORE\n  const getUser = () => {\n    let token = sessionStorage.getItem(\"CWJWT\");\n    let decodedToken = jwtDecode(token);\n    axios({\n      url: host + \"/api/user/profile\",\n      method: \"POST\",\n      headers: {\n        \"auth-token\": token\n      },\n      data: { userId: decodedToken._id }\n    })\n      .then(response => {\n        store.dispatch(setUser(response.data.body));\n      })\n      .catch(function(error) {\n        alert(error);\n      });\n  };\n\n  const checkJwtAndValidate = (...rest) => {\n    if (sessionStorage.getItem(\"CWJWT\")) {\n      let token = sessionStorage.getItem(\"CWJWT\");\n      axios({\n        url: host + \"/api/user/authenticate\",\n        method: \"POST\",\n        headers: {\n          \"auth-token\": token\n        }\n      })\n        .then(response => {\n          //IF AUTHENTICATED, GET AND STORE INFO\n          if (response.data.success === true) {\n            console.log(\"Token validated\");\n\n            getUser();\n          }\n          setState({ ...state, isAuthenticated: response.data.success });\n          store.dispatch(setLogged(true));\n          setState({ ...state, isLoading: false });\n          console.log(\"redirecting\");\n          return <Redirect to=\"/home\" />;\n        })\n        .catch(function(error) {\n          alert(error);\n\n          setState({ isLoading: false });\n          return <Component {...rest} />;\n        });\n    } else {\n      setState({ ...state, isLoading: false });\n      return <Component {...rest} />;\n    }\n  };\n\n  const validate = (...rest) => {\n    //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n    if (store.getState().auth.isLoginSuccess) {\n      setState({ isAuthenticated: true, isLoading: false });\n      console.log(\"isAuthenticated true\");\n      return <Redirect to=\"/home\" />;\n    } else {\n      //IF JWT AVAILABLE, VALIDATE\n      checkJwtAndValidate();\n    }\n  };\n\n  useEffect(\n    (...rest) => {\n      validate(...rest);\n    },\n    state,\n    []\n  );\n\n  if (state.isLoading) {\n  }\n  if (!store.getState().auth.isLoginSuccess) {\n    return <Component {...rest} />;\n  }\n  return <Redirect to=\"/home\" />;\n};\n\nexport { LogRegReroute };\n"]},"metadata":{},"sourceType":"module"}