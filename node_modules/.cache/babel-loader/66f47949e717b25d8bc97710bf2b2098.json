{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Login.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/auth-actions';\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let value = event.target.value;\n      event.target.name === 'username' ? this.setState({\n        username: value\n      }) : this.setState({\n        password: value\n      });\n    };\n\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //STORES INPUT IN LOCAL STATE\n\n\n  //RETRIEVES INPUT FROM STATE, DISPATCHES LOGIN ACTION\n  handleSubmit(e) {\n    e.preventDefault();\n    let _this$state = this.state,\n        username = _this$state.username,\n        password = _this$state.password;\n    this.props.login(username, password, function () {\n      this.props.history.push('/dashboard');\n    });\n  }\n\n  render() {\n    let _this$props = this.props,\n        isLoginPending = _this$props.isLoginPending,\n        isLoginSuccess = _this$props.isLoginSuccess,\n        loginError = _this$props.loginError;\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mt: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mb-3\",\n      style: {\n        color: \"#4051B5\"\n      },\n      icon: faLock,\n      size: \"4x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Sign in\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      autoComplete: \"username\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: \"mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/register\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\")), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, isLoginPending && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Please wait...\"), isLoginSuccess && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Success.\"), loginError && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, loginError.message)))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Login.js"],"names":["React","Paper","Button","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Container","FontAwesomeIcon","faLock","connect","login","Login","Component","constructor","props","handleChange","event","value","target","name","setState","username","password","state","handleSubmit","bind","e","preventDefault","history","push","render","isLoginPending","isLoginSuccess","loginError","color","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\n\nimport { connect } from 'react-redux'\nimport { login } from '../../actions/auth-actions';\n\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  //STORES INPUT IN LOCAL STATE\n  handleChange = (event) => {\n    let value = event.target.value\n    event.target.name === 'username' ? \n    this.setState({ username: value }) : \n    this.setState({ password: value });\n  }\n\n  //RETRIEVES INPUT FROM STATE, DISPATCHES LOGIN ACTION\n  handleSubmit(e) {\n    e.preventDefault();\n    let { username, password } = this.state;\n    this.props.login(username, password, function(){\n      this.props.history.push('/dashboard');\n    });\n  }\n\n\n  render(){\n    let {isLoginPending, isLoginSuccess, loginError} = this.props;\n    return (\n      \n      <Container component=\"main\" maxWidth=\"xs\">\n\n        <Box mt={8}>\n          <Paper className='p-5'>\n            <div className='row'>\n              <div className=\"col text-center\">\n                <FontAwesomeIcon className=\"mb-3\" style={{color: \"#4051B5\"}} icon={faLock} size=\"4x\" />\n\n                <Typography component=\"h1\" variant=\"h5\">\n                  Sign in\n                </Typography>\n              </div>\n            </div>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                onChange={this.handleChange}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n              />\n              <TextField\n                onChange={this.handleChange}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth \n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                {/* <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid> */}\n                <Grid item className=\"mt-1\">\n                  <Link href=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n                <div className=\"message\">\n                  { isLoginPending && <div>Please wait...</div> }\n                  { isLoginSuccess && <div>Success.</div> }\n                  { loginError && <div>{loginError.message}</div> }\n                </div>\n              </Grid>\n            </form>\n          </Paper>\n        \n        </Box>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}