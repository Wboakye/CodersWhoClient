{"ast":null,"code":"import axios from 'axios';\nimport * as c from '../redux/constants';\nconst host = 'http://localhost:3005'; //const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(username, password, response => {\n      return dispatch => {\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginPending(false));\n        dispatch(setLoginSuccess(true));\n      };\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    console.log(response);\n\n    if (response.status === 200) {\n      callback(response);\n    } else {\n      console.log('Not logged in');\n    }\n  }).catch(function (error) {\n    console.log(error);\n    return dispatch => {\n      dispatch(setLoginError(true));\n    };\n  });\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","c","host","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","response","setUserToken","data","isLoginPending","type","SET_LOGIN_PENDING","isLoginSuccess","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","token","SET_USER_TOKEN","callback","post","then","console","log","status","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AAEA,MAAMC,IAAI,GAAG,uBAAb,C,CACA;;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAsBM,QAAD,IAAc;AAC7C,aAAOL,QAAQ,IAAI;AACjBA,QAAAA,QAAQ,CAACM,YAAY,CAACD,QAAQ,CAACE,IAAV,CAAb,CAAR;AACAP,QAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAD,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAJD;AAKD,KANW,CAAZ;AAOD,GAZD;AAaD;;AAED,SAASD,eAAT,CAAyBO,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEd,CAAC,CAACe,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASN,eAAT,CAAyBS,cAAzB,EAAyC;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAEd,CAAC,CAACiB,iBADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASR,aAAT,CAAuBU,UAAvB,EAAmC;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAEd,CAAC,CAACmB,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBS,KAAtB,EAA6B;AAC3B,SAAO;AACLN,IAAAA,IAAI,EAAEd,CAAC,CAACqB,cADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAID,SAASX,YAAT,CAAsBN,QAAtB,EAAgCC,QAAhC,EAA0CkB,QAA1C,EAAoD;AAClDvB,EAAAA,KAAK,CAACwB,IAAN,CAAWtB,IAAI,GAAG,iBAAlB,EAAqC;AACnCE,IAAAA,QAAQ,EAAEA,QADyB;AAEnCC,IAAAA,QAAQ,EAAEA;AAFyB,GAArC,EAICoB,IAJD,CAIQd,QAAD,IAAc;AACnBe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;;AACA,QAAGA,QAAQ,CAACiB,MAAT,KAAoB,GAAvB,EAA2B;AACzBL,MAAAA,QAAQ,CAACZ,QAAD,CAAR;AACD,KAFD,MAEK;AACHe,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AAEF,GAZD,EAaCE,KAbD,CAaO,UAAUC,KAAV,EAAiB;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,WAAOxB,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AACD,KAFD;AAGD,GAlBD;AAmBD","sourcesContent":["import axios from 'axios'\n\nimport * as c from '../redux/constants'\n\nconst host = 'http://localhost:3005';\n//const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(username, password, (response) => {\n      return dispatch => {\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginPending(false));\n        dispatch(setLoginSuccess(true));\n      }\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\n\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  })\n  .then( (response) => {\n    console.log(response)\n    if(response.status === 200){\n      callback(response)\n    }else{\n      console.log('Not logged in')\n    }\n\n  })\n  .catch(function (error) {\n    console.log(error);\n    return dispatch => {\n      dispatch(setLoginError(true));\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}