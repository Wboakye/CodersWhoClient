{"ast":null,"code":"import _objectSpread from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting /PrivateRoute.js\";\nimport React, { useEffect, useState } from './node_modules/react';\nimport { Redirect } from \"./node_modules/react-router-dom\";\nimport store from '../../redux/store';\nimport axios from './node_modules/axios';\nimport { setUser } from '../../actions/user-actions';\nimport { setLogged } from '../../actions/auth-actions';\n\nconst jwtDecode = require('./node_modules/jwt-decode');\n\nconst host = 'http://localhost:3005';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\", \"isLoading\"]);\n\n  const _React$useState = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; //GET USER INFO, SAVE IN STORE\n\n\n  const getUser = () => {\n    let token = sessionStorage.getItem('CWJWT');\n    let decodedToken = jwtDecode(token);\n    axios({\n      url: host + '/api/user/profile',\n      method: 'POST',\n      headers: {\n        'auth-token': token\n      },\n      data: {\n        userId: decodedToken._id\n      }\n    }).then(response => {\n      store.dispatch(setUser(response.data.body));\n    }).catch(function (error) {\n      alert(error);\n      console.log('ERROR');\n    });\n  };\n\n  const checkJwtAndValidate = (...rest) => {\n    if (sessionStorage.getItem('CWJWT')) {\n      console.log('Has JWT Authenticating');\n      let token = sessionStorage.getItem('CWJWT');\n      axios({\n        url: host + '/api/user/authenticate',\n        method: 'POST',\n        headers: {\n          'auth-token': token\n        }\n      }).then(response => {\n        console.log('Received response with JWT'); //IF AUTHENTICATED, GET AND STORE INFO\n\n        if (response.data.success === true) {\n          getUser();\n        }\n\n        console.log('Got user, authentication');\n        setState(_objectSpread({}, state, {\n          isAuthenticated: response.data.success\n        }));\n        store.dispatch(setLogged(true));\n        console.log('set store auth complete');\n        setState(_objectSpread({}, state, {\n          isLoading: false\n        }));\n        return React.createElement(Component, Object.assign({}, rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }).catch(function (error) {\n        alert(error);\n        console.log('ERROR');\n        setState({\n          isLoading: false\n        });\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      });\n    } else {\n      console.log('No JWT Not Authenticated');\n      setState(_objectSpread({}, state, {\n        isLoading: false\n      }));\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n  };\n\n  const validate = (...rest) => {\n    //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n    if (store.getState().auth.isLoginSuccess) {\n      console.log('State authed logged in.');\n      setState({\n        isAuthenticated: true,\n        isLoading: false\n      });\n      return React.createElement(Component, Object.assign({}, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    } else {\n      //IF JWT AVAILABLE, VALIDATE\n      checkJwtAndValidate();\n    }\n  };\n\n  useEffect((...rest) => {\n    validate(...rest);\n  }, state, []);\n\n  if (state.isLoading) {}\n\n  if (!store.getState().auth.isLoginSuccess) {\n    console.log('auth returning to loggin');\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Component, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n};\n\nexport { PrivateRoute };","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting /PrivateRoute.js"],"names":["React","useEffect","useState","Redirect","store","axios","setUser","setLogged","jwtDecode","require","host","PrivateRoute","Component","component","isAuthenticated","isLoading","rest","state","setState","getUser","token","sessionStorage","getItem","decodedToken","url","method","headers","data","userId","_id","then","response","dispatch","body","catch","error","alert","console","log","checkJwtAndValidate","success","validate","getState","auth","isLoginSuccess"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from './node_modules/react'\nimport { Redirect} from \"./node_modules/react-router-dom\"\nimport store from '../../redux/store'\nimport axios from './node_modules/axios';\nimport { setUser } from '../../actions/user-actions'\nimport { setLogged } from '../../actions/auth-actions'\n\nconst jwtDecode = require('./node_modules/jwt-decode')\n\nconst host = 'http://localhost:3005';\n\n\nconst PrivateRoute = ({component: Component, isAuthenticated, isLoading, ...rest }) => { \n\n\n    const [state, setState] = React.useState({\n        isAuthenticated: false,\n        isLoading: true\n      });\n\n      //GET USER INFO, SAVE IN STORE\n      const getUser = () => {\n        let token = sessionStorage.getItem('CWJWT');\n          let decodedToken = jwtDecode(token)\n              axios({\n                url: host + '/api/user/profile',\n                method: 'POST',\n                headers: {\n                  'auth-token': token,\n                },\n                data: { userId: decodedToken._id },\n              }).then( (response) => {\n                 store.dispatch(setUser(response.data.body));\n              })\n              .catch(function (error) {\n                alert(error);\n                console.log('ERROR')\n\n              }); \n      }\n\n      const checkJwtAndValidate = (...rest) => {\n        if(sessionStorage.getItem('CWJWT')){\n          console.log('Has JWT Authenticating')\n          let token = sessionStorage.getItem('CWJWT');\n          axios({\n            url: host + '/api/user/authenticate',\n            method: 'POST',\n            headers: {\n              'auth-token': token,\n            },\n          }).then( (response) => {\n            console.log('Received response with JWT')\n            //IF AUTHENTICATED, GET AND STORE INFO\n            if(response.data.success === true){\n              getUser()\n            }\n              console.log('Got user, authentication')                 \n              setState({...state, isAuthenticated: response.data.success});\n              store.dispatch(setLogged(true));\n              console.log('set store auth complete')\n              setState({...state, isLoading: false});\n              return <Component {...rest} /> \n          })\n          .catch(function (error) {\n            alert(error);\n            console.log('ERROR')\n\n            setState({isLoading: false});\n            return <Redirect to=\"/login\" />\n          });\n        }else{\n          console.log('No JWT Not Authenticated')\n          setState({...state, isLoading: false });\n          return <Redirect to=\"/login\" />\n        }\n      }\n\n      const validate = (...rest) => {\n        //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n        if(store.getState().auth.isLoginSuccess){\n          console.log('State authed logged in.')\n          setState({isAuthenticated: true, isLoading: false});\n          return <Component {...rest} /> \n        }else{\n          //IF JWT AVAILABLE, VALIDATE\n          checkJwtAndValidate();\n        }\n      }\n\n      useEffect((...rest) => {\n        validate(...rest);\n      },state, []);\n\n           if(state.isLoading) {\n            }\n            if(!store.getState().auth.isLoginSuccess) {\n                console.log('auth returning to loggin')\n                return <Redirect to=\"/login\" />\n            }\n            return <Component {...rest} /> \n} \n\nexport { PrivateRoute }"]},"metadata":{},"sourceType":"module"}