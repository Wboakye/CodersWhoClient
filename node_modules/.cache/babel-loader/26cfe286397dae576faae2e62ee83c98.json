{"ast":null,"code":"import axios from 'axios';\nimport history from '../history';\nimport * as c from '../redux/constants';\nimport store from '../redux/store';\nconst host = 'http://localhost:3005'; //const host = process.env.API_HOST;\n//LOGIN\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(username, password, (data, error) => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        console.log(data);\n\n        if (data.success === true) {\n          dispatch(setUserToken(data.token));\n          dispatch(setLoginSuccess(true));\n          history.push('/dashboard');\n        } else {\n          dispatch(setLoginError(data.message));\n          alert(data.message);\n        }\n      } else {\n        dispatch(setLoginError(data.message));\n        alert(data.message);\n      }\n    });\n  };\n}\nexport function logout() {\n  return dispatch => {\n    sessionStorage.removeItem('CWJWT');\n    dispatch(setLoginSuccess(false));\n    history.push('/dashboard');\n  };\n}\nexport function verifyLoggedIn() {\n  if (!store.getState().isLoginSuccess === true) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    console.log(response);\n    sessionStorage.setItem('CWJWT', response.data.token);\n    return callback(response.data, null);\n  }).catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","history","c","store","host","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","data","error","console","log","success","setUserToken","token","push","message","alert","logout","sessionStorage","removeItem","verifyLoggedIn","getState","isLoginSuccess","isLoginPending","type","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","SET_USER_TOKEN","callback","post","then","response","setItem","catch","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,IAAI,GAAG,uBAAb,C,CACA;AAGA;;AACA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAqB,CAACM,IAAD,EAAOC,KAAP,KAAiB;AAChDN,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACK,KAAL,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,YAAGA,IAAI,CAACI,OAAL,KAAiB,IAApB,EAAyB;AACvBT,UAAAA,QAAQ,CAACU,YAAY,CAACL,IAAI,CAACM,KAAN,CAAb,CAAR;AACAX,UAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAT,UAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD,SAJD,MAIK;AACHZ,UAAAA,QAAQ,CAACG,aAAa,CAACE,IAAI,CAACQ,OAAN,CAAd,CAAR;AACAC,UAAAA,KAAK,CAACT,IAAI,CAACQ,OAAN,CAAL;AACD;AACF,OAVD,MAUO;AACLb,QAAAA,QAAQ,CAACG,aAAa,CAACE,IAAI,CAACQ,OAAN,CAAd,CAAR;AACAC,QAAAA,KAAK,CAACT,IAAI,CAACQ,OAAN,CAAL;AACD;AACF,KAhBW,CAAZ;AAiBD,GAtBD;AAuBD;AAED,OAAO,SAASE,MAAT,GAAiB;AACtB,SAAOf,QAAQ,IAAI;AACjBgB,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAjB,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAT,IAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD,GAJD;AAKD;AAED,OAAO,SAASM,cAAT,GAAyB;AAC9B,MAAG,CAACvB,KAAK,CAACwB,QAAN,GAAiBC,cAAlB,KAAqC,IAAxC,EAA8C;AAC5C,WAAO,KAAP;AACD,GAFD,MAEK;AACH,WAAO,IAAP;AACD;AACF;;AAED,SAASnB,eAAT,CAAyBoB,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAE5B,CAAC,CAAC6B,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASnB,eAAT,CAAyBkB,cAAzB,EAAyC;AACvC,SAAO;AACLE,IAAAA,IAAI,EAAE5B,CAAC,CAAC8B,iBADH;AAELJ,IAAAA;AAFK,GAAP;AAID;;AAED,SAASjB,aAAT,CAAuBsB,UAAvB,EAAmC;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAE5B,CAAC,CAACgC,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASf,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO;AACLW,IAAAA,IAAI,EAAE5B,CAAC,CAACiC,cADH;AAELhB,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBN,QAAtB,EAAgCC,QAAhC,EAA0C6B,QAA1C,EAAoD;AAClDpC,EAAAA,KAAK,CAACqC,IAAN,CAAWjC,IAAI,GAAG,iBAAlB,EAAqC;AACnCE,IAAAA,QAAQ,EAAEA,QADyB;AAEnCC,IAAAA,QAAQ,EAAEA;AAFyB,GAArC,EAIC+B,IAJD,CAIQC,QAAD,IAAc;AACnBxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAZ;AACAf,IAAAA,cAAc,CAACgB,OAAf,CAAuB,OAAvB,EAAgCD,QAAQ,CAAC1B,IAAT,CAAcM,KAA9C;AACA,WAAOiB,QAAQ,CAACG,QAAQ,CAAC1B,IAAV,EAAgB,IAAhB,CAAf;AACD,GARD,EASC4B,KATD,CASO,UAAU3B,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAlB;AACA,WAAOsB,QAAQ,CAAC,IAAIM,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD,GAZD;AAaD","sourcesContent":["import axios from 'axios'\n\nimport history from '../history'\n\nimport * as c from '../redux/constants'\nimport store from '../redux/store'\n\nconst host = 'http://localhost:3005';\n//const host = process.env.API_HOST;\n\n\n//LOGIN\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(username, password, (data, error) => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        console.log(data);\n        if(data.success === true){\n          dispatch(setUserToken(data.token));\n          dispatch(setLoginSuccess(true));\n          history.push('/dashboard');\n        }else{\n          dispatch(setLoginError(data.message));\n          alert(data.message);\n        }\n      } else {\n        dispatch(setLoginError(data.message));\n        alert(data.message);\n      }\n    });\n  }\n}\n\nexport function logout(){\n  return dispatch => {\n    sessionStorage.removeItem('CWJWT');\n    dispatch(setLoginSuccess(false));\n    history.push('/dashboard');\n  }\n}\n\nexport function verifyLoggedIn(){\n  if(!store.getState().isLoginSuccess === true ){\n    return false\n  }else{\n    return true\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  })\n  .then( (response) => {\n    console.log(response)\n    sessionStorage.setItem('CWJWT', response.data.token);\n    return callback(response.data, null);\n  })\n  .catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}\n"]},"metadata":{},"sourceType":"module"}