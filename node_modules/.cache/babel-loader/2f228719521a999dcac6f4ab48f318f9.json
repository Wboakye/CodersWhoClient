{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store.js';\nimport { Router, Route, Switch } from 'react-router';\nimport { Provider, connect } from 'react-redux';\nimport { PrivateRoute } from './components/PrivateRoute';\nimport io from 'socket.io-client';\nimport { verifyLoggedIn } from './actions/auth-actions';\nimport Login from './components/views/Unauth/Login';\nimport Register from './components/views/Unauth/Register';\nimport Dashboard from './components/views/Auth/Dashboard';\nimport DashboardUnauth from './components/views/Unauth/DashboardUnauth';\nimport history from './history';\nlet socket = io.connect('http://localhost:80');\nconst host = 'http://localhost:3005';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    socket.on('broadcast', function (data) {\n      console.log(data);\n    });\n  }\n\n  componentWillUnmount() {\n    socket.on('disconnect', function (data) {\n      io.emit('end');\n    });\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Router, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/user\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: DashboardUnauth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      component: () => 'NOT FOUND',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyLoggedIn\n  };\n};\n\nconnect(mapDispatchToProps)(Login);\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); //TODO: Get page auth working. Fix auth function in actions.","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/index.js"],"names":["React","ReactDOM","serviceWorker","store","Router","Route","Switch","Provider","connect","PrivateRoute","io","verifyLoggedIn","Login","Register","Dashboard","DashboardUnauth","history","socket","host","Main","Component","constructor","state","componentDidMount","on","data","console","log","componentWillUnmount","emit","render","mapDispatchToProps","dispatch","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AAEA,OAAOC,EAAP,MAAe,kBAAf;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,MAAM,GAAGP,EAAE,CAACF,OAAH,CAAW,qBAAX,CAAb;AACA,MAAMU,IAAI,GAAG,uBAAb;;AAGA,MAAMC,IAAN,SAAmBnB,KAAK,CAACoB,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW,EAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AAEnBN,IAAAA,MAAM,CAACO,EAAP,CAAU,WAAV,EAAuB,UAAUC,IAAV,EAAgB;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmB,KADvB;AAEC;;AAEDG,EAAAA,oBAAoB,GAAE;AAClBX,IAAAA,MAAM,CAACO,EAAP,CAAU,YAAV,EAAwB,UAAUC,IAAV,EAAe;AACnCf,MAAAA,EAAE,CAACmB,IAAH,CAAQ,KAAR;AACH,KAFD;AAGH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,WAAO,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE3B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEa,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,SAAS,EAAE,MAAM,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADG,CAAP;AAWH;;AAhC8B;;AAoCjC,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLrB,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMAH,OAAO,CAAEuB,kBAAF,CAAP,CAA6BnB,KAA7B;AAEFX,QAAQ,CAAC6B,MAAT,CACG,oBAAE,IAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,EAGEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF,E,CAKA;AACA;AACA;;AACAhC,aAAa,CAACiC,UAAd,G,CAGA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store.js';\nimport { Router, Route, Switch } from 'react-router';\nimport { Provider, connect } from 'react-redux';\nimport {PrivateRoute} from './components/PrivateRoute'\n\nimport io from 'socket.io-client'\n\nimport { verifyLoggedIn } from './actions/auth-actions' \n\nimport Login from './components/views/Unauth/Login'\nimport Register from './components/views/Unauth/Register'\nimport Dashboard from './components/views/Auth/Dashboard'\nimport DashboardUnauth from './components/views/Unauth/DashboardUnauth'\n\nimport history from './history'\n\nlet socket = io.connect('http://localhost:80');\nconst host = 'http://localhost:3005';\n\n\nclass Main extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            \n        }\n    }\n    componentDidMount(){\n\n    socket.on('broadcast', function (data) {\n        console.log(data);});\n    }\n\n    componentWillUnmount(){\n        socket.on('disconnect', function (data){\n            io.emit('end');\n        })\n    }\n\n\n    render(){\n        return(<Provider store={store}>\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                    <PrivateRoute path=\"/user\" component={Dashboard} />\n                    <Route path=\"/\" component={DashboardUnauth} />\n                    <Route path=\"/*\" component={() => 'NOT FOUND'} />\n                </Switch>\n            </Router>\n        </Provider>)\n    }\n}\n\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      verifyLoggedIn\n    };\n  }\n  \n  connect( mapDispatchToProps)(Login);\n\nReactDOM.render(\n   < Main/>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//TODO: Get page auth working. Fix auth function in actions.\n"]},"metadata":{},"sourceType":"module"}