{"ast":null,"code":"import axios from 'axios';\nimport * as c from '../redux/constants';\nconst host = 'http://localhost:3005'; //const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return callLoginApi(username, password, () => {\n    console.log(\"Logged in\");\n  });\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction setLoggedIn(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  }).then(function (response) {\n    console.log(response);\n    callback();\n    return dispatch => {\n      dispatch(setUserToken(response.data));\n    };\n  }).catch(function (error) {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","c","host","login","username","password","callLoginApi","console","log","setLoginPending","isLoginPending","type","SET_LOGIN_PENDING","setLoginSuccess","isLoginSuccess","SET_LOGIN_SUCCESS","setLoginError","loginError","SET_LOGIN_ERROR","setUserToken","token","SET_USER_TOKEN","setLoggedIn","callback","post","then","response","dispatch","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AAEA,MAAMC,IAAI,GAAG,uBAAb,C,CACA;;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,YAAY,CAACF,QAAD,EAAWC,QAAX,EAAqB,MAAM;AAC1CE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAFgB,CAAnB;AAID;;AAED,SAASC,eAAT,CAAyBC,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEV,CAAC,CAACW,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASG,eAAT,CAAyBC,cAAzB,EAAyC;AACvC,SAAO;AACLH,IAAAA,IAAI,EAAEV,CAAC,CAACc,iBADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEV,CAAC,CAACiB,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO;AACLT,IAAAA,IAAI,EAAEV,CAAC,CAACoB,cADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,WAAT,CAAqBF,KAArB,EAA4B;AAC1B,SAAO;AACLT,IAAAA,IAAI,EAAEV,CAAC,CAACoB,cADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASd,YAAT,CAAsBF,QAAtB,EAAgCC,QAAhC,EAA0CkB,QAA1C,EAAoD;AAClDvB,EAAAA,KAAK,CAACwB,IAAN,CAAWtB,IAAI,GAAG,iBAAlB,EAAqC;AACnCE,IAAAA,QAAQ,EAAEA,QADyB;AAEnCC,IAAAA,QAAQ,EAAEA;AAFyB,GAArC,EAICoB,IAJD,CAIM,UAAUC,QAAV,EAAoB;AACxBnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,QAAZ;AACAH,IAAAA,QAAQ;AACR,WAAOI,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACR,YAAY,CAACO,QAAQ,CAACE,IAAV,CAAb,CAAR;AACD,KAFD;AAGD,GAVD,EAWCC,KAXD,CAWO,UAAUC,KAAV,EAAiB;AACtBvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACD,GAbD;AAcD","sourcesContent":["import axios from 'axios'\n\nimport * as c from '../redux/constants'\n\nconst host = 'http://localhost:3005';\n//const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return callLoginApi(username, password, () => {\n      console.log(\"Logged in\")\n    });\n  \n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\nfunction setLoggedIn(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  })\n  .then(function (response) {\n    console.log(response)\n    callback()\n    return dispatch => {\n      dispatch(setUserToken(response.data));\n    }\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}