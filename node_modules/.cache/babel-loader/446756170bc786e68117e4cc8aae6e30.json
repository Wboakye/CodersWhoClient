{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store.js\";\nimport { Router, Route, Switch } from \"react-router\";\nimport { Provider, connect } from \"react-redux\";\nimport { OpenRoute } from \"./components/rerouting/OpenRoute\";\nimport io from \"socket.io-client\";\nimport { verifyLoggedIn } from \"./actions/auth-actions\";\nimport Login from \"./components/views/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport history from \"./history\";\nlet socket = io.connect(\"http://localhost:80\"); //const host = 'http://localhost:3005';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  } //CONSOLE LOGGED PRICE DATA\n  // componentDidMount(){\n  //     socket.on('broadcast', function (data) {\n  //         console.log(data);\n  //     });\n  // }\n\n\n  componentWillUnmount() {\n    socket.emit(\"end\");\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Router, {\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(OpenRoute, {\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      component: () => \"NOT FOUND\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyLoggedIn\n  };\n};\n\nconnect(mapDispatchToProps)(Login);\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); //TODO: Get page auth working. Fix auth function in actions.","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/index.js"],"names":["React","ReactDOM","serviceWorker","store","Router","Route","Switch","Provider","connect","OpenRoute","io","verifyLoggedIn","Login","Dashboard","history","socket","Main","Component","constructor","state","componentWillUnmount","emit","render","mapDispatchToProps","dispatch","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,MAAM,GAAGL,EAAE,CAACF,OAAH,CAAW,qBAAX,CAAb,C,CACA;;AAEA,MAAMQ,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACD,GAJgC,CAMjC;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,IAAP,CAAY,KAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEW,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,GAAhB;AAAoB,MAAA,SAAS,EAAED,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,SAAS,EAAE,MAAM,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADF;AAUD;;AA5BgC;;AA+BnC,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMAH,OAAO,CAACe,kBAAD,CAAP,CAA4BX,KAA5B;AAEAX,QAAQ,CAACqB,MAAT,CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF,E,CAMA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd,G,CAEA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store.js\";\nimport { Router, Route, Switch } from \"react-router\";\nimport { Provider, connect } from \"react-redux\";\nimport { OpenRoute } from \"./components/rerouting/OpenRoute\";\nimport io from \"socket.io-client\";\n\nimport { verifyLoggedIn } from \"./actions/auth-actions\";\n\nimport Login from \"./components/views/Login\";\nimport Dashboard from \"./components/Dashboard\";\n\nimport history from \"./history\";\n\nlet socket = io.connect(\"http://localhost:80\");\n//const host = 'http://localhost:3005';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  //CONSOLE LOGGED PRICE DATA\n  // componentDidMount(){\n  //     socket.on('broadcast', function (data) {\n  //         console.log(data);\n  //     });\n  // }\n\n  componentWillUnmount() {\n    socket.emit(\"end\");\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Switch>\n            <OpenRoute path=\"/\" component={Dashboard} />\n            <Route path=\"/*\" component={() => \"NOT FOUND\"} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyLoggedIn\n  };\n};\n\nconnect(mapDispatchToProps)(Login);\n\nReactDOM.render(\n  <Main />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n//TODO: Get page auth working. Fix auth function in actions.\n"]},"metadata":{},"sourceType":"module"}