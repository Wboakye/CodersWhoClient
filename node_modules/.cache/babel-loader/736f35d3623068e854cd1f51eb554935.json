{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst STORE_USER_INFO = 'STORE_USER_INFO';\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(username, password, error => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  setTimeout(() => {\n    if (username === 'admin' && password === 'admin') {\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid username and password'));\n    }\n  }, 1000);\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","STORE_USER_INFO","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","error","isLoginPending","type","isLoginSuccess","loginError","callback","setTimeout","Error"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAqBM,KAAK,IAAI;AACxCL,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACI,KAAL,EAAY;AACVL,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,CAACG,aAAa,CAACE,KAAD,CAAd,CAAR;AACD;AACF,KAPW,CAAZ;AAQD,GAbD;AAcD;;AAED,SAASJ,eAAT,CAAyBK,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEd,iBADD;AAELa,IAAAA;AAFK,GAAP;AAID;;AAED,SAASJ,eAAT,CAAyBM,cAAzB,EAAyC;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEb,iBADD;AAELc,IAAAA;AAFK,GAAP;AAID;;AAED,SAASL,aAAT,CAAuBM,UAAvB,EAAmC;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEZ,eADD;AAELc,IAAAA;AAFK,GAAP;AAID;;AAED,SAASL,YAAT,CAAsBN,QAAtB,EAAgCC,QAAhC,EAA0CW,QAA1C,EAAoD;AAClDC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIb,QAAQ,KAAK,OAAb,IAAwBC,QAAQ,KAAK,OAAzC,EAAkD;AAChD,aAAOW,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,+BAAV,CAAD,CAAf;AACD;AACF,GANS,EAMP,IANO,CAAV;AAOD","sourcesContent":["const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst STORE_USER_INFO = 'STORE_USER_INFO';\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(username, password, error => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction callLoginApi(username, password, callback) {\n  setTimeout(() => {\n    if (username === 'admin' && password === 'admin') {\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid username and password'));\n    }\n  }, 1000);\n}\n"]},"metadata":{},"sourceType":"module"}