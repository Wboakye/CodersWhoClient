{"ast":null,"code":"import _objectSpread from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/LogRegReroute.js\";\nimport React, { useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport store from '../../redux/store';\nimport axios from 'axios';\nimport { setUser } from '../../actions/user-actions';\nimport { setLogged } from '../../actions/auth-actions';\n\nconst jwtDecode = require('jwt-decode');\n\nconst host = 'http://localhost:3005';\n\nconst LogRegReroute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\", \"isLoading\"]);\n\n  const _React$useState = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1]; //GET USER INFO, SAVE IN STORE\n\n\n  const getUser = () => {\n    let token = sessionStorage.getItem('CWJWT');\n    let decodedToken = jwtDecode(token);\n    axios({\n      url: host + '/api/user/profile',\n      method: 'POST',\n      headers: {\n        'auth-token': token\n      },\n      data: {\n        userId: decodedToken._id\n      }\n    }).then(response => {\n      store.dispatch(setUser(response.data.body));\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const checkJwtAndValidate = (...rest) => {\n    if (sessionStorage.getItem('CWJWT')) {\n      let token = sessionStorage.getItem('CWJWT');\n      axios({\n        url: host + '/api/user/authenticate',\n        method: 'POST',\n        headers: {\n          'auth-token': token\n        }\n      }).then(response => {\n        //IF AUTHENTICATED, GET AND STORE INFO\n        if (response.data.success === true) {\n          getUser();\n        }\n\n        setState(_objectSpread({}, state, {\n          isAuthenticated: response.data.success\n        }));\n        store.dispatch(setLogged(true));\n        setState(_objectSpread({}, state, {\n          isLoading: false\n        }));\n        return React.createElement(Redirect, {\n          to: \"/home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }).catch(function (error) {\n        alert(error);\n        setState({\n          isLoading: false\n        });\n        return React.createElement(Component, Object.assign({}, rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      });\n    } else {\n      setState(_objectSpread({}, state, {\n        isLoading: false\n      }));\n      return React.createElement(Component, Object.assign({}, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  };\n\n  const validate = (...rest) => {\n    //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n    if (store.getState().auth.isLoginSuccess) {\n      setState({\n        isAuthenticated: true,\n        isLoading: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    } else {\n      //IF JWT AVAILABLE, VALIDATE\n      checkJwtAndValidate();\n    }\n  };\n\n  useEffect((...rest) => {\n    validate(...rest);\n  }, state, []);\n\n  if (state.isLoading) {}\n\n  if (!store.getState().auth.isLoginSuccess) {\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Component, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nexport { LogRegReroute };","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/LogRegReroute.js"],"names":["React","useEffect","Redirect","store","axios","setUser","setLogged","jwtDecode","require","host","LogRegReroute","Component","component","isAuthenticated","isLoading","rest","useState","state","setState","getUser","token","sessionStorage","getItem","decodedToken","url","method","headers","data","userId","_id","then","response","dispatch","body","catch","error","alert","checkJwtAndValidate","success","validate","getState","auth","isLoginSuccess"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Redirect} from \"react-router-dom\"\nimport store from '../../redux/store'\nimport axios from 'axios';\nimport { setUser } from '../../actions/user-actions'\nimport { setLogged } from '../../actions/auth-actions'\n\nconst jwtDecode = require('jwt-decode')\n\nconst host = 'http://localhost:3005';\n\n\nconst LogRegReroute = ({component: Component, isAuthenticated, isLoading, ...rest }) => { \n\n\n    const [state, setState] = React.useState({\n        isAuthenticated: false,\n        isLoading: true\n      });\n\n      //GET USER INFO, SAVE IN STORE\n      const getUser = () => {\n        let token = sessionStorage.getItem('CWJWT');\n          let decodedToken = jwtDecode(token)\n              axios({\n                url: host + '/api/user/profile',\n                method: 'POST',\n                headers: {\n                  'auth-token': token,\n                },\n                data: { userId: decodedToken._id },\n              }).then( (response) => {\n                 store.dispatch(setUser(response.data.body));\n              })\n              .catch(function (error) {\n                alert(error);\n\n              }); \n      }\n\n      const checkJwtAndValidate = (...rest) => {\n        if(sessionStorage.getItem('CWJWT')){\n          let token = sessionStorage.getItem('CWJWT');\n          axios({\n            url: host + '/api/user/authenticate',\n            method: 'POST',\n            headers: {\n              'auth-token': token,\n            },\n          }).then( (response) => {\n            //IF AUTHENTICATED, GET AND STORE INFO\n            if(response.data.success === true){\n              getUser()\n            }\n              setState({...state, isAuthenticated: response.data.success});\n              store.dispatch(setLogged(true));\n              setState({...state, isLoading: false});\n              return <Redirect to=\"/home\" /> \n          })\n          .catch(function (error) {\n            alert(error);\n\n            setState({isLoading: false});\n            return <Component {...rest} />\n          });\n        }else{\n          setState({...state, isLoading: false });\n          return <Component {...rest} />\n        }\n      }\n\n      const validate = (...rest) => {\n        //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n        if(store.getState().auth.isLoginSuccess){\n          setState({isAuthenticated: true, isLoading: false});\n          return <Redirect to=\"/home\" />\n        }else{\n          //IF JWT AVAILABLE, VALIDATE\n          checkJwtAndValidate();\n        }\n      }\n\n      useEffect((...rest) => {\n        validate(...rest);\n      },state, []);\n\n           if(state.isLoading) {\n            }\n            if(!store.getState().auth.isLoginSuccess) {\n                return <Redirect to=\"/login\" />\n            }\n            return <Component {...rest} /> \n} \n\nexport { LogRegReroute }"]},"metadata":{},"sourceType":"module"}