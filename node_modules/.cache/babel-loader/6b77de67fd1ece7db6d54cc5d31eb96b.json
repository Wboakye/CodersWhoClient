{"ast":null,"code":"import _objectSpread from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/PrivateRoute.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport store from '../redux/store';\nimport axios from 'axios';\nconst host = 'http://localhost:3005';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\", \"isLoading\"]);\n\n  const _React$useState = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  useEffect(() => {\n    if (store.getState().auth.isLoginSuccess) {\n      setState({\n        isAuthenticated: true,\n        isLoading: false\n      });\n    } else {\n      if (sessionStorage.getItem('CWJWT')) {\n        let token = sessionStorage.getItem('CWJWT');\n        axios({\n          url: host + '/api/user/authenticate',\n          method: 'POST',\n          headers: {\n            'auth-token': token\n          }\n        }).then(response => {\n          setState(_objectSpread({}, state, {\n            isAuthenticated: response.data.success\n          }));\n          setState(_objectSpread({}, state, {\n            isLoading: false\n          }));\n        }).catch(function (error) {\n          alert(error);\n          setState({\n            isLoading: false\n          });\n        });\n      } else {\n        setState(_objectSpread({}, state, {\n          isLoading: false\n        }));\n      }\n    }\n  }, []);\n\n  if (state.isLoading) {}\n\n  if (!store.getState().auth.isLoginSuccess) {\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Component, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nexport { PrivateRoute };","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/PrivateRoute.js"],"names":["React","useEffect","useState","Redirect","store","axios","host","PrivateRoute","Component","component","isAuthenticated","isLoading","rest","state","setState","getState","auth","isLoginSuccess","sessionStorage","getItem","token","url","method","headers","then","response","data","success","catch","error","alert"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG,uBAAb;;AAGA,MAAMC,YAAY,GAAG,UAAkE;AAAA,MAArDC,SAAqD,QAAhEC,SAAgE;AAAA,MAA1CC,eAA0C,QAA1CA,eAA0C;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,IAAW;;AAAA,0BAGzDZ,KAAK,CAACE,QAAN,CAAe;AACrCQ,IAAAA,eAAe,EAAE,KADoB;AAErCC,IAAAA,SAAS,EAAE;AAF0B,GAAf,CAHyD;AAAA;AAAA,QAG5EE,KAH4E;AAAA,QAGrEC,QAHqE;;AAQjFb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGG,KAAK,CAACW,QAAN,GAAiBC,IAAjB,CAAsBC,cAAzB,EAAwC;AACpCH,MAAAA,QAAQ,CAAC;AAACJ,QAAAA,eAAe,EAAE,IAAlB;AAAwBC,QAAAA,SAAS,EAAE;AAAnC,OAAD,CAAR;AACD,KAFH,MAEO;AACH,UAAGO,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAH,EAAmC;AACjC,YAAIC,KAAK,GAAGF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAZ;AACAd,QAAAA,KAAK,CAAC;AACJgB,UAAAA,GAAG,EAAEf,IAAI,GAAG,wBADR;AAEJgB,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,OAAO,EAAE;AACP,0BAAcH;AADP;AAHL,SAAD,CAAL,CAMGI,IANH,CAMUC,QAAD,IAAc;AACnBX,UAAAA,QAAQ,mBAAKD,KAAL;AAAYH,YAAAA,eAAe,EAAEe,QAAQ,CAACC,IAAT,CAAcC;AAA3C,aAAR;AACAb,UAAAA,QAAQ,mBAAKD,KAAL;AAAYF,YAAAA,SAAS,EAAE;AAAvB,aAAR;AACH,SATD,EAUCiB,KAVD,CAUO,UAAUC,KAAV,EAAiB;AACtBC,UAAAA,KAAK,CAACD,KAAD,CAAL;AACAf,UAAAA,QAAQ,CAAC;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAD,CAAR;AACD,SAbD;AAcD,OAhBD,MAgBK;AACHG,QAAAA,QAAQ,mBAAKD,KAAL;AAAYF,UAAAA,SAAS,EAAE;AAAvB,WAAR;AACD;AACF;AACJ,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BK,MAAGE,KAAK,CAACF,SAAT,EAAoB,CAClB;;AACD,MAAG,CAACP,KAAK,CAACW,QAAN,GAAiBC,IAAjB,CAAsBC,cAA1B,EAA0C;AACtC,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SAAO,oBAAC,SAAD,oBAAeL,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAIX,CA3CD;;AA6CA,SAASL,YAAT","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Redirect} from \"react-router-dom\"\nimport store from '../redux/store'\nimport axios from 'axios';\n\nconst host = 'http://localhost:3005';\n\n\nconst PrivateRoute = ({component: Component, isAuthenticated, isLoading, ...rest }) => { \n\n\n    const [state, setState] = React.useState({\n        isAuthenticated: false,\n        isLoading: true\n      });\n\n      useEffect(() => {\n        if(store.getState().auth.isLoginSuccess){\n            setState({isAuthenticated: true, isLoading: false});\n          }else{\n            if(sessionStorage.getItem('CWJWT')){\n              let token = sessionStorage.getItem('CWJWT');\n              axios({\n                url: host + '/api/user/authenticate',\n                method: 'POST',\n                headers: {\n                  'auth-token': token,\n                },\n              }).then( (response) => {\n                  setState({...state, isAuthenticated: response.data.success});\n                  setState({...state, isLoading: false});\n              })\n              .catch(function (error) {\n                alert(error);\n                setState({isLoading: false});\n              });\n            }else{\n              setState({...state, isLoading: false });\n            }\n          }\n      }, []);\n\n           if(state.isLoading) {\n            }\n            if(!store.getState().auth.isLoginSuccess) {\n                return <Redirect to=\"/login\" />\n            }\n            return <Component {...rest} /> \n\n\n\n} \n\nexport { PrivateRoute }"]},"metadata":{},"sourceType":"module"}