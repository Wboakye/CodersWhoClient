{"ast":null,"code":"import _objectSpread from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/OpenRoute.js\";\nimport React, { useEffect } from './node_modules/react';\nimport store from '../../redux/store';\nimport axios from './node_modules/axios';\nimport { setUser } from '../../actions/user-actions';\nimport { setLogged } from '../../actions/auth-actions';\n\nconst jwtDecode = require('./node_modules/jwt-decode');\n\nconst host = 'http://localhost:3005';\n\nconst OpenRoute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      isLoading = _ref.isLoading,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\", \"isLoading\"]);\n\n  const _React$useState = React.useState({\n    isAuthenticated: false,\n    isLoading: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const getUser = () => {\n    let token = sessionStorage.getItem('CWJWT');\n    let decodedToken = jwtDecode(token);\n    axios({\n      url: host + '/api/user/profile',\n      method: 'POST',\n      headers: {\n        'auth-token': token\n      },\n      data: {\n        userId: decodedToken._id\n      }\n    }).then(response => {\n      store.dispatch(setUser(response.data.body));\n    }).catch(function (error) {\n      alert(error);\n      console.log('ERROR');\n    });\n  };\n\n  useEffect((...rest) => {\n    //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n    if (store.getState().auth.isLoginSuccess) {\n      console.log('State authed logged in.');\n      setState({\n        isAuthenticated: true,\n        isLoading: false\n      });\n      return React.createElement(Component, Object.assign({}, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    } else {\n      //IF JWT AVAILABLE, VALIDATE\n      if (sessionStorage.getItem('CWJWT')) {\n        console.log('Has JWT Authenticating');\n        let token = sessionStorage.getItem('CWJWT');\n        axios({\n          url: host + '/api/user/authenticate',\n          method: 'POST',\n          headers: {\n            'auth-token': token\n          }\n        }).then(response => {\n          console.log('Received response with JWT');\n\n          if (response.data.success === true) {\n            getUser();\n          }\n\n          console.log('Got user, authentication');\n          setState(_objectSpread({}, state, {\n            isAuthenticated: response.data.success\n          }));\n          store.dispatch(setLogged(true));\n          console.log('set store auth complete');\n          setState(_objectSpread({}, state, {\n            isLoading: false\n          }));\n          return React.createElement(Component, Object.assign({}, rest, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }));\n        }).catch(function (error) {\n          alert(error);\n          console.log('ERROR');\n          setState({\n            isLoading: false\n          });\n          return React.createElement(Component, Object.assign({}, rest, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }));\n        });\n      } else {\n        console.log('No JWT Not Authenticated');\n        setState(_objectSpread({}, state, {\n          isLoading: false\n        }));\n        return React.createElement(Component, Object.assign({}, rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n      }\n    }\n  }, []);\n\n  if (state.isLoading) {}\n\n  if (!store.getState().auth.isLoginSuccess) {\n    console.log('auth returning to loggin');\n    return React.createElement(Component, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Component, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n};\n\nexport { OpenRoute };","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/rerouting/OpenRoute.js"],"names":["React","useEffect","store","axios","setUser","setLogged","jwtDecode","require","host","OpenRoute","Component","component","isAuthenticated","isLoading","rest","useState","state","setState","getUser","token","sessionStorage","getItem","decodedToken","url","method","headers","data","userId","_id","then","response","dispatch","body","catch","error","alert","console","log","getState","auth","isLoginSuccess","success"],"mappings":"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","sourcesContent":["import React, { useEffect } from './node_modules/react'\nimport store from '../../redux/store'\nimport axios from './node_modules/axios';\nimport { setUser } from '../../actions/user-actions'\nimport { setLogged } from '../../actions/auth-actions'\n\nconst jwtDecode = require('./node_modules/jwt-decode')\n\nconst host = 'http://localhost:3005';\n\n\nconst OpenRoute = ({component: Component, isAuthenticated, isLoading, ...rest }) => { \n\n\n    const [state, setState] = React.useState({\n        isAuthenticated: false,\n        isLoading: true\n      });\n\n      const getUser = () => {\n        let token = sessionStorage.getItem('CWJWT');\n          let decodedToken = jwtDecode(token)\n              axios({\n                url: host + '/api/user/profile',\n                method: 'POST',\n                headers: {\n                  'auth-token': token,\n                },\n                data: { userId: decodedToken._id },\n              }).then( (response) => {\n                 store.dispatch(setUser(response.data.body));\n              })\n              .catch(function (error) {\n                alert(error);\n                console.log('ERROR')\n\n              }); \n      }\n\n      useEffect((...rest) => {\n        //IF ALREADY AUTHENTICATED IN STORE, AUTHENTICATED\n        if(store.getState().auth.isLoginSuccess){\n            console.log('State authed logged in.')\n            setState({isAuthenticated: true, isLoading: false});\n            return <Component {...rest} /> \n          }else{\n            //IF JWT AVAILABLE, VALIDATE\n            if(sessionStorage.getItem('CWJWT')){\n              console.log('Has JWT Authenticating')\n              let token = sessionStorage.getItem('CWJWT');\n              axios({\n                url: host + '/api/user/authenticate',\n                method: 'POST',\n                headers: {\n                  'auth-token': token,\n                },\n              }).then( (response) => {\n                console.log('Received response with JWT')\n                if(response.data.success === true){\n                  getUser()\n                }\n                  console.log('Got user, authentication')                 \n                  setState({...state, isAuthenticated: response.data.success});\n                  store.dispatch(setLogged(true));\n                  console.log('set store auth complete')\n                  setState({...state, isLoading: false});\n                  return <Component {...rest} /> \n              })\n              .catch(function (error) {\n                alert(error);\n                console.log('ERROR')\n                setState({isLoading: false});\n                return <Component {...rest} /> \n              });\n            }else{\n              console.log('No JWT Not Authenticated')\n              setState({...state, isLoading: false });\n              return <Component {...rest} /> \n            }\n          }\n      }, []);\n\n           if(state.isLoading) {\n            }\n            if(!store.getState().auth.isLoginSuccess) {\n                console.log('auth returning to loggin')\n                return <Component {...rest} /> \n            }\n            return <Component {...rest} /> \n} \n\nexport { OpenRoute }"]},"metadata":{},"sourceType":"module"}