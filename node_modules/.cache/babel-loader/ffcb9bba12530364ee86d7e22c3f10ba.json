{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/App.js\";\nimport React from 'react';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\nimport { Login } from './components/Login';\nimport { connect } from 'react-redux';\n\nconst App = props => React.createElement(\"div\", {\n  className: \"App\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: props,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"*\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})))));\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/App.js"],"names":["React","Switch","BrowserRouter","Router","Route","PropTypes","Provider","store","Login","connect","App","props","propTypes","object","isRequired","mapStateToProps","state","isLoginPending","isLoginSuccess","loginError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,GAAG,GAAIC,KAAD,IAEN;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CADF,CADF,CAFN;;AAgBIE,GAAG,CAACE,SAAJ,GAAgB;AACdL,EAAAA,KAAK,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AADV,CAAhB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,cAAc,EAAED,KAAK,CAACC,cADjB;AAELC,IAAAA,cAAc,EAAEF,KAAK,CAACE,cAFjB;AAGLC,IAAAA,UAAU,EAAEH,KAAK,CAACG;AAHb,GAAP;AAKD,CAND;;AAQA,eAAeV,OAAO,CAACM,eAAD,CAAP,CAAyBL,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\nimport { Login } from './components/Login'\nimport { connect } from 'react-redux'\n\n\nconst App = (props) => (\n  \n      <div className=\"App\">\n        <Provider store={props}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"*\" component={Login} />\n            </Switch>\n          </Router>\n        </Provider>\n      </div>\n      \n    );\n\n    App.propTypes = {\n      store: PropTypes.object.isRequired\n    }\n\n    const mapStateToProps = (state) => {\n      return {\n        isLoginPending: state.isLoginPending,\n        isLoginSuccess: state.isLoginSuccess,\n        loginError: state.loginError\n      };\n    }\n    \n    export default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}