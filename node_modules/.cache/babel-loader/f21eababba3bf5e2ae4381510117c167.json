{"ast":null,"code":"import axios from 'axios';\nimport * as c from '../redux/constants';\nconst host = 'http://localhost:3005'; //const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(username, password, (response, error) => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        console.log(response);\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    console.log(response);\n    return callback(response.data, null);\n  }).catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","c","host","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","response","error","console","log","setUserToken","data","isLoginPending","type","SET_LOGIN_PENDING","isLoginSuccess","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","token","SET_USER_TOKEN","callback","post","then","catch","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AAEA,MAAMC,IAAI,GAAG,uBAAb,C,CACA;;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAqB,CAACM,QAAD,EAAWC,KAAX,KAAqB;AACpDN,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACK,KAAL,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAL,QAAAA,QAAQ,CAACS,YAAY,CAACJ,QAAQ,CAACK,IAAV,CAAb,CAAR;AACAV,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAJD,MAIO;AACLF,QAAAA,QAAQ,CAACG,aAAa,CAACG,KAAD,CAAd,CAAR;AACD;AACF,KATW,CAAZ;AAUD,GAfD;AAgBD;;AAED,SAASL,eAAT,CAAyBU,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEjB,CAAC,CAACkB,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAAST,eAAT,CAAyBY,cAAzB,EAAyC;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAEjB,CAAC,CAACoB,iBADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASX,aAAT,CAAuBa,UAAvB,EAAmC;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAEjB,CAAC,CAACsB,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBS,KAAtB,EAA6B;AAC3B,SAAO;AACLN,IAAAA,IAAI,EAAEjB,CAAC,CAACwB,cADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAID,SAASd,YAAT,CAAsBN,QAAtB,EAAgCC,QAAhC,EAA0CqB,QAA1C,EAAoD;AAClD1B,EAAAA,KAAK,CAAC2B,IAAN,CAAWzB,IAAI,GAAG,iBAAlB,EAAqC;AACnCE,IAAAA,QAAQ,EAAEA,QADyB;AAEnCC,IAAAA,QAAQ,EAAEA;AAFyB,GAArC,EAICuB,IAJD,CAIQjB,QAAD,IAAc;AACnBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAOe,QAAQ,CAACf,QAAQ,CAACK,IAAV,EAAgB,IAAhB,CAAf;AACD,GAPD,EAQCa,KARD,CAQO,UAAUjB,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAlB;AACA,WAAOc,QAAQ,CAAC,IAAII,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD,GAXD;AAYD","sourcesContent":["import axios from 'axios'\n\nimport * as c from '../redux/constants'\n\nconst host = 'http://localhost:3005';\n//const host = process.env.API_HOST;\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(username, password, (response, error) => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        console.log(response);\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\n\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  })\n  .then( (response) => {\n    console.log(response)\n    return callback(response.data, null);\n  })\n  .catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}\n"]},"metadata":{},"sourceType":"module"}