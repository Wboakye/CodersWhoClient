{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Auth/UserProfile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PostsCard from \"../../PostsCard\";\nimport ProfileCard from \"../../ProfileCard\";\nimport ProfileActions from \"../../ProfileActions\";\nconst host = \"http://localhost:3005\";\nexport default class UserProfile extends Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      followers: [],\n      following: [],\n      groups: [],\n      lastName: \"\",\n      username: \"\",\n      _id: \"\",\n      posts: []\n    };\n  } // componentDidUpdate(prevProps) {\n  //     const { match: { params } } = this.props;\n  //     console.log(`Params Update: ${params.userId}`)\n  //     if (prevProps.match.params !== params){\n  //       axios.post(`${host}/api/user/${params.userId}`)\n  //         .then((response) => {\n  //             let body = response.data.body\n  //             this.setState({\n  //                 _id: body._id,\n  //                 firstName: body.firstName,\n  //                 lastName: body.lastName,\n  //                 username: body.username,\n  //                 following: body.following,\n  //                 followers: body.followers,\n  //                 groups: body.groups,\n  //                 email: body.email,\n  //                 posts: body.posts\n  //             });\n  //         })\n  //         .catch(function (error) {\n  //             // handle error\n  //             console.log(error);\n  //         })\n  //     }\n  //   }\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    const params = this.props.match.params;\n    console.log(\"Params Did Mount: \".concat(params.userId));\n    axios.post(\"\".concat(host, \"/api/user/profile\"), {\n      userId: params.userId\n    }).then(response => {\n      console.log(\"Finished API Fetch\");\n\n      if (this._isMounted) {\n        let body = response.data.body;\n        this.setState({\n          _id: body._id,\n          firstName: body.firstName,\n          lastName: body.lastName,\n          username: body.username,\n          following: body.following,\n          followers: body.followers,\n          groups: body.groups,\n          email: body.email,\n          posts: body.posts\n        });\n        console.log(\"updated state\");\n      }\n    }).catch(function (err) {\n      // handle error\n      console.log(\"USER PROFILE ERROR: \".concat(err));\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let actionsInfo = {\n      following: this.state.following,\n      followers: this.state.followers,\n      groups: this.state.groups\n    };\n    return React.createElement(\"div\", {\n      className: \"my-3 my-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ProfileCard, {\n      user: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(ProfileActions, {\n      actionsInfo: actionsInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.posts.map((post, index) => React.createElement(PostsCard, {\n      className: \"mb-3\",\n      key: index,\n      height: \"25%\",\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Auth/UserProfile.js"],"names":["React","Component","axios","PostsCard","ProfileCard","ProfileActions","host","UserProfile","constructor","_isMounted","state","email","firstName","followers","following","groups","lastName","username","_id","posts","componentDidMount","params","props","match","console","log","userId","post","then","response","body","data","setState","catch","err","componentWillUnmount","render","actionsInfo","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PostsCard from \"../../PostsCard\";\nimport ProfileCard from \"../../ProfileCard\";\nimport ProfileActions from \"../../ProfileActions\";\n\nconst host = \"http://localhost:3005\";\n\nexport default class UserProfile extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      followers: [],\n      following: [],\n      groups: [],\n      lastName: \"\",\n      username: \"\",\n      _id: \"\",\n      posts: []\n    };\n  }\n\n  // componentDidUpdate(prevProps) {\n  //     const { match: { params } } = this.props;\n\n  //     console.log(`Params Update: ${params.userId}`)\n\n  //     if (prevProps.match.params !== params){\n  //       axios.post(`${host}/api/user/${params.userId}`)\n  //         .then((response) => {\n  //             let body = response.data.body\n  //             this.setState({\n  //                 _id: body._id,\n  //                 firstName: body.firstName,\n  //                 lastName: body.lastName,\n  //                 username: body.username,\n  //                 following: body.following,\n  //                 followers: body.followers,\n  //                 groups: body.groups,\n  //                 email: body.email,\n  //                 posts: body.posts\n  //             });\n  //         })\n  //         .catch(function (error) {\n  //             // handle error\n  //             console.log(error);\n  //         })\n  //     }\n  //   }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const {\n      match: { params }\n    } = this.props;\n\n    console.log(`Params Did Mount: ${params.userId}`);\n    axios\n      .post(`${host}/api/user/profile`, {\n        userId: params.userId\n      })\n      .then(response => {\n        console.log(\"Finished API Fetch\");\n        if (this._isMounted) {\n          let body = response.data.body;\n          this.setState({\n            _id: body._id,\n            firstName: body.firstName,\n            lastName: body.lastName,\n            username: body.username,\n            following: body.following,\n            followers: body.followers,\n            groups: body.groups,\n            email: body.email,\n            posts: body.posts\n          });\n          console.log(\"updated state\");\n        }\n      })\n      .catch(function(err) {\n        // handle error\n        console.log(`USER PROFILE ERROR: ${err}`);\n      });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let actionsInfo = {\n      following: this.state.following,\n      followers: this.state.followers,\n      groups: this.state.groups\n    };\n    return (\n      <div className=\"my-3 my-md-5\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-4\">\n              <ProfileCard user={this.state} />\n              <ProfileActions actionsInfo={actionsInfo} />\n            </div>\n            <div className=\"col-lg-8\">\n              {this.state.posts.map((post, index) => (\n                <PostsCard\n                  className=\"mb-3\"\n                  key={index}\n                  height=\"25%\"\n                  post={post}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}