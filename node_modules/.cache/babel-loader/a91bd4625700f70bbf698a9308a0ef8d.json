{"ast":null,"code":"import _slicedToArray from \"/Users/william/Desktop/codersWho/coderswhoclient/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/ProfileActions.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function ProfileActions(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"paper\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        scroll = _React$useState4[0],\n        setScroll = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        text = _React$useState6[0],\n        setText = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        header = _React$useState8[0],\n        setHeader = _React$useState8[1];\n\n  const handleClickOpen = (text, header) => {\n    setHeader(header);\n    setText(text);\n    setOpen(true);\n    setScroll(\"paper\");\n  };\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const classes = useStyles(); // const sampleFollowers = [\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\"\n  // ];\n\n  return React.createElement(\"div\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClickOpen(props.actionsInfo.followers, \"Followers\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, props.actionsInfo.followers.length), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Followers\")), React.createElement(\"div\", {\n    className: \"col text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClickOpen(props.actionsInfo.following, \"Following\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, props.actionsInfo.following.length), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Following\")), React.createElement(\"div\", {\n    className: \"col text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClickOpen(props.actionsInfo.groups, \"Groups\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, props.actionsInfo.groups.length), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Groups\")))), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    maxWidth: \"xs\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, header), React.createElement(DialogContent, {\n    dividers: scroll === \"paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, text.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, item), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/ProfileActions.js"],"names":["React","makeStyles","Card","CardContent","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","useStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ProfileActions","props","useState","open","setOpen","scroll","setScroll","text","setText","header","setHeader","handleClickOpen","handleClose","classes","actionsInfo","followers","length","following","groups","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nexport default function ProfileActions(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState(\"paper\");\n  const [text, setText] = React.useState([]);\n  const [header, setHeader] = React.useState(\"\");\n\n  const handleClickOpen = (text, header) => {\n    setHeader(header);\n    setText(text);\n    setOpen(true);\n    setScroll(\"paper\");\n  };\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const classes = useStyles();\n  // const sampleFollowers = [\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\",\n  //   \"Tim\",\n  //   \"Joe\",\n  //   \"Bob\",\n  //   \"Salle\",\n  //   \"James\",\n  //   \"Tom\",\n  //   \"Sandra\",\n  //   \"Jake\",\n  //   \"Michael\",\n  //   \"Mitch\",\n  //   \"Danny\",\n  //   \"Lisa\",\n  //   \"Rashad\"\n  // ];\n\n  return (\n    <div className=\"mb-3\">\n      <Card className={classes.card}>\n        <CardContent>\n          <div className=\"row\">\n            <div className=\"col text-center\">\n              <Button\n                onClick={() => {\n                  handleClickOpen(props.actionsInfo.followers, \"Followers\");\n                }}\n              >\n                {props.actionsInfo.followers.length}\n              </Button>\n              <div>Followers</div>\n            </div>\n            <div className=\"col text-center\">\n              <Button\n                onClick={() => {\n                  handleClickOpen(props.actionsInfo.following, \"Following\");\n                }}\n              >\n                {props.actionsInfo.following.length}\n              </Button>\n              <div>Following</div>\n            </div>\n            <div className=\"col text-center\">\n              <Button\n                onClick={() => {\n                  handleClickOpen(props.actionsInfo.groups, \"Groups\");\n                }}\n              >\n                {props.actionsInfo.groups.length}\n              </Button>\n              <div>Groups</div>\n            </div>\n          </div>\n        </CardContent>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          scroll={scroll}\n          aria-labelledby=\"scroll-dialog-title\"\n          maxWidth=\"xs\"\n          fullWidth={true}\n        >\n          <DialogTitle id=\"scroll-dialog-title\">{header}</DialogTitle>\n          <DialogContent dividers={scroll === \"paper\"}>\n            <DialogContentText>\n              {text.map((item, index) => (\n                <div key={index}>\n                  <div className=\"py-3\">{item}</div>\n                  <Divider />\n                </div>\n              ))}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}