{"ast":null,"code":"import axios from 'axios';\nimport history from '../history';\nimport * as c from '../redux/constants';\nimport store from '../redux/store';\nconst host = 'http://localhost:3005'; //const host = process.env.API_HOST;\n//LOGIN\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(username, password, (data, error) => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        console.log(data);\n\n        if (data.success === true) {\n          dispatch(setUserToken(data.token));\n          dispatch(setLoginSuccess(true));\n          history.push('/dashboard');\n        } else {\n          dispatch(setLoginError(data.message));\n          alert(data.message);\n        }\n      } else {\n        dispatch(setLoginError(data.message));\n        alert(data.message);\n      }\n    });\n  };\n}\nexport function logout() {\n  return dispatch => {\n    sessionStorage.removeItem('CWJWT');\n    dispatch(setLoginSuccess(false));\n    history.push('/login');\n  };\n} //VERIFY THAT A USER IS LOGGED IN\n\nexport function verifyLoggedIn(redirect) {\n  console.log(\"Login authenticating\");\n\n  if (store.getState().isLoginSuccess) {\n    if (redirect) {\n      history.push('/dashboard');\n    }\n\n    return true;\n  } else {\n    if (sessionStorage.getItem('CWJWT')) {\n      let token = sessionStorage.getItem('CWJWT');\n      axios({\n        url: host + '/api/user/authenticate',\n        method: 'POST',\n        headers: {\n          'auth-token': token\n        }\n      }).then(response => {\n        store.dispatch(setLoginSuccess(true));\n        console.log(\"Authenticated\");\n\n        if (redirect) {\n          history.push('/dashboard');\n        }\n\n        return true;\n      }).catch(function (error) {\n        alert(error);\n        console.log(\"Not authenticated\");\n        return false;\n      });\n    } else {\n      console.log(\"Not authenticated\");\n      return false;\n    }\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    console.log(response);\n    sessionStorage.setItem('CWJWT', response.data.token);\n    return callback(response.data, null);\n  }).catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","history","c","store","host","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","data","error","console","log","success","setUserToken","token","push","message","alert","logout","sessionStorage","removeItem","verifyLoggedIn","redirect","getState","isLoginSuccess","getItem","url","method","headers","then","response","catch","isLoginPending","type","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","SET_USER_TOKEN","callback","post","setItem","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,IAAI,GAAG,uBAAb,C,CACA;AAGA;;AACA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,QAAD,EAAWC,QAAX,EAAqB,CAACM,IAAD,EAAOC,KAAP,KAAiB;AAChDN,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACK,KAAL,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,YAAGA,IAAI,CAACI,OAAL,KAAiB,IAApB,EAAyB;AACvBT,UAAAA,QAAQ,CAACU,YAAY,CAACL,IAAI,CAACM,KAAN,CAAb,CAAR;AACAX,UAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAT,UAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD,SAJD,MAIK;AACHZ,UAAAA,QAAQ,CAACG,aAAa,CAACE,IAAI,CAACQ,OAAN,CAAd,CAAR;AACAC,UAAAA,KAAK,CAACT,IAAI,CAACQ,OAAN,CAAL;AACD;AACF,OAVD,MAUO;AACLb,QAAAA,QAAQ,CAACG,aAAa,CAACE,IAAI,CAACQ,OAAN,CAAd,CAAR;AACAC,QAAAA,KAAK,CAACT,IAAI,CAACQ,OAAN,CAAL;AACD;AACF,KAhBW,CAAZ;AAiBD,GAtBD;AAuBD;AAED,OAAO,SAASE,MAAT,GAAiB;AACtB,SAAOf,QAAQ,IAAI;AACjBgB,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAjB,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAT,IAAAA,OAAO,CAACmB,IAAR,CAAa,QAAb;AACD,GAJD;AAKD,C,CAED;;AACA,OAAO,SAASM,cAAT,CAAwBC,QAAxB,EAAiC;AACtCZ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,MAAGb,KAAK,CAACyB,QAAN,GAAiBC,cAApB,EAAmC;AACjC,QAAGF,QAAH,EAAY;AACN1B,MAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD;;AACL,WAAO,IAAP;AACD,GALD,MAKK;AACH,QAAGI,cAAc,CAACM,OAAf,CAAuB,OAAvB,CAAH,EAAmC;AACjC,UAAIX,KAAK,GAAGK,cAAc,CAACM,OAAf,CAAuB,OAAvB,CAAZ;AACA9B,MAAAA,KAAK,CAAC;AACJ+B,QAAAA,GAAG,EAAE3B,IAAI,GAAG,wBADR;AAEJ4B,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,OAAO,EAAE;AACP,wBAAcd;AADP;AAHL,OAAD,CAAL,CAMGe,IANH,CAMUC,QAAD,IAAc;AACrBhC,QAAAA,KAAK,CAACK,QAAN,CAAeE,eAAe,CAAC,IAAD,CAA9B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,YAAGW,QAAH,EAAY;AACV1B,UAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD;;AACD,eAAO,IAAP;AACD,OAbD,EAcCgB,KAdD,CAcO,UAAUtB,KAAV,EAAiB;AACtBQ,QAAAA,KAAK,CAACR,KAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,eAAO,KAAP;AACD,OAlBD;AAmBD,KArBD,MAqBK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,aAAO,KAAP;AACD;AACF;AACF;;AAED,SAASP,eAAT,CAAyB4B,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEpC,CAAC,CAACqC,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAAS3B,eAAT,CAAyBmB,cAAzB,EAAyC;AACvC,SAAO;AACLS,IAAAA,IAAI,EAAEpC,CAAC,CAACsC,iBADH;AAELX,IAAAA;AAFK,GAAP;AAID;;AAED,SAASlB,aAAT,CAAuB8B,UAAvB,EAAmC;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEpC,CAAC,CAACwC,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASvB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO;AACLmB,IAAAA,IAAI,EAAEpC,CAAC,CAACyC,cADH;AAELxB,IAAAA;AAFK,GAAP;AAID;;AAED,SAASP,YAAT,CAAsBN,QAAtB,EAAgCC,QAAhC,EAA0CqC,QAA1C,EAAoD;AAClD5C,EAAAA,KAAK,CAAC6C,IAAN,CAAWzC,IAAI,GAAG,iBAAlB,EAAqC;AACnCE,IAAAA,QAAQ,EAAEA,QADyB;AAEnCC,IAAAA,QAAQ,EAAEA;AAFyB,GAArC,EAIC2B,IAJD,CAIQC,QAAD,IAAc;AACnBpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACAX,IAAAA,cAAc,CAACsB,OAAf,CAAuB,OAAvB,EAAgCX,QAAQ,CAACtB,IAAT,CAAcM,KAA9C;AACA,WAAOyB,QAAQ,CAACT,QAAQ,CAACtB,IAAV,EAAgB,IAAhB,CAAf;AACD,GARD,EASCuB,KATD,CASO,UAAUtB,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAlB;AACA,WAAO8B,QAAQ,CAAC,IAAIG,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD,GAZD;AAaD","sourcesContent":["import axios from 'axios'\n\nimport history from '../history'\n\nimport * as c from '../redux/constants'\nimport store from '../redux/store'\n\nconst host = 'http://localhost:3005';\n//const host = process.env.API_HOST;\n\n\n//LOGIN\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(username, password, (data, error) => {\n      dispatch(setLoginPending(false));\n      if (!error) {\n        console.log(data);\n        if(data.success === true){\n          dispatch(setUserToken(data.token));\n          dispatch(setLoginSuccess(true));\n          history.push('/dashboard');\n        }else{\n          dispatch(setLoginError(data.message));\n          alert(data.message);\n        }\n      } else {\n        dispatch(setLoginError(data.message));\n        alert(data.message);\n      }\n    });\n  }\n}\n\nexport function logout(){\n  return dispatch => {\n    sessionStorage.removeItem('CWJWT');\n    dispatch(setLoginSuccess(false));\n    history.push('/login');\n  }\n}\n\n//VERIFY THAT A USER IS LOGGED IN\nexport function verifyLoggedIn(redirect){\n  console.log(\"Login authenticating\")\n  if(store.getState().isLoginSuccess){\n    if(redirect){\n          history.push('/dashboard');\n        }\n    return true\n  }else{\n    if(sessionStorage.getItem('CWJWT')){\n      let token = sessionStorage.getItem('CWJWT');\n      axios({\n        url: host + '/api/user/authenticate',\n        method: 'POST',\n        headers: {\n          'auth-token': token,\n        },\n      }).then( (response) => {\n        store.dispatch(setLoginSuccess(true));\n        console.log(\"Authenticated\")\n        if(redirect){\n          history.push('/dashboard');\n        }\n        return true\n      })\n      .catch(function (error) {\n        alert(error);\n        console.log(\"Not authenticated\")\n        return false\n      });\n    }else{\n      console.log(\"Not authenticated\")\n      return false\n    }\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\nfunction callLoginApi(username, password, callback) {\n  axios.post(host + '/api/user/login', {\n    username: username,\n    password: password\n  })\n  .then( (response) => {\n    console.log(response)\n    sessionStorage.setItem('CWJWT', response.data.token);\n    return callback(response.data, null);\n  })\n  .catch(function (error) {\n    console.log(null, error);\n    return callback(new Error('Invalid email and password'));\n  });\n}\n"]},"metadata":{},"sourceType":"module"}