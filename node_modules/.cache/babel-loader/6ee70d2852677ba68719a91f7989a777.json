{"ast":null,"code":"var _jsxFileName = \"/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Login.js\";\nimport React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { login, verifyLoggedIn } from \"../../actions/auth-actions\";\nimport { theme } from \"../theme\";\nimport store from \"../../redux/store\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let value = event.target.value;\n      event.target.name === \"username\" ? this.setState({\n        username: value\n      }) : this.setState({\n        password: value\n      });\n    };\n\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //STORES INPUT IN LOCAL STATE\n\n\n  //RETRIEVES INPUT FROM STATE, DISPATCHES LOGIN ACTION\n  handleSubmit(e) {\n    e.preventDefault();\n    let _this$state = this.state,\n        username = _this$state.username,\n        password = _this$state.password;\n    store.dispatch(login(username, password));\n  } // componentWillMount(){\n  //   store.dispatch(verifyLoggedIn(true))\n  // }\n\n\n  render() {\n    let _this$props = this.props,\n        isLoginPending = _this$props.isLoginPending,\n        isLoginSuccess = _this$props.isLoginSuccess,\n        loginError = _this$props.loginError;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Box, {\n      mt: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Fade, Object.assign({\n      in: true\n    }, {\n      timeout: 750\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      className: \"p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"mb-3\",\n      style: {\n        color: \"#7da2a9\"\n      },\n      icon: faLock,\n      size: \"4x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Sign in\"))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      color: \"secondary\",\n      autoComplete: \"username\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      color: \"secondary\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: \"mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/register\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\")), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, isLoginPending && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Please wait...\"), isLoginSuccess && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Success.\"), loginError && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, loginError.message))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password)),\n    verifyLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/components/views/Login.js"],"names":["React","ThemeProvider","Fade","Paper","Button","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","Container","FontAwesomeIcon","faLock","connect","login","verifyLoggedIn","theme","store","Login","Component","constructor","props","handleChange","event","value","target","name","setState","username","password","state","handleSubmit","bind","e","preventDefault","dispatch","render","isLoginPending","isLoginSuccess","loginError","timeout","color","message","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { connect } from \"react-redux\";\nimport { login, verifyLoggedIn } from \"../../actions/auth-actions\";\nimport { theme } from \"../theme\";\nimport store from \"../../redux/store\";\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  //STORES INPUT IN LOCAL STATE\n  handleChange = event => {\n    let value = event.target.value;\n    event.target.name === \"username\"\n      ? this.setState({ username: value })\n      : this.setState({ password: value });\n  };\n\n  //RETRIEVES INPUT FROM STATE, DISPATCHES LOGIN ACTION\n  handleSubmit(e) {\n    e.preventDefault();\n    let { username, password } = this.state;\n    store.dispatch(login(username, password));\n  }\n\n  // componentWillMount(){\n  //   store.dispatch(verifyLoggedIn(true))\n  // }\n\n  render() {\n    let { isLoginPending, isLoginSuccess, loginError } = this.props;\n    return (\n      <div>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <ThemeProvider theme={theme}>\n            <Box mt={3}>\n              <Fade in={true} {...{ timeout: 750 }}>\n                <Paper className=\"p-5\">\n                  <div className=\"row\">\n                    <div className=\"col text-center\">\n                      <FontAwesomeIcon\n                        className=\"mb-3\"\n                        style={{ color: \"#7da2a9\" }}\n                        icon={faLock}\n                        size=\"4x\"\n                      />\n\n                      <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                      </Typography>\n                    </div>\n                  </div>\n                  <form onSubmit={this.handleSubmit}>\n                    <TextField\n                      onChange={this.handleChange}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      color=\"secondary\"\n                      autoComplete=\"username\"\n                      autoFocus\n                    />\n                    <TextField\n                      onChange={this.handleChange}\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      color=\"secondary\"\n                      autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      label=\"Remember me\"\n                    />\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      Sign In\n                    </Button>\n                    <Grid container>\n                      {/* <Grid item xs>\n                      <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                      </Link>\n                    </Grid> */}\n                      <Grid item className=\"mt-1\">\n                        <Link href=\"/register\" variant=\"body2\">\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid>\n                      <div className=\"message\">\n                        {isLoginPending && <div>Please wait...</div>}\n                        {isLoginSuccess && <div>Success.</div>}\n                        {loginError && <div>{loginError.message}</div>}\n                      </div>\n                    </Grid>\n                  </form>\n                </Paper>\n              </Fade>\n            </Box>\n          </ThemeProvider>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginPending: state.isLoginPending,\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password)),\n    verifyLoggedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}