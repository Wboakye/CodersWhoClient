{"ast":null,"code":"import axios from 'axios';\nimport * as c from '../redux/constants';\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    axios.post('http://localhost:3005/api/user/login', {\n      username: username,\n      password: password\n    }).then(function (response) {\n      return dispatch => {\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginPending(false));\n        dispatch(setLoginSuccess(true));\n      };\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  };\n}\n\nfunction callLoginApi(username, password, callback) {}","map":{"version":3,"sources":["/Users/william/Desktop/codersWho/coderswhoclient/src/actions/auth-actions.js"],"names":["axios","c","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","post","then","response","setUserToken","data","catch","error","console","log","isLoginPending","type","SET_LOGIN_PENDING","isLoginSuccess","SET_LOGIN_SUCCESS","loginError","SET_LOGIN_ERROR","token","SET_USER_TOKEN","callLoginApi","callback"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AAGA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAR,IAAAA,KAAK,CAACS,IAAN,CAAW,sCAAX,EAAmD;AACjDN,MAAAA,QAAQ,EAAEA,QADuC;AAEjDC,MAAAA,QAAQ,EAAEA;AAFuC,KAAnD,EAICM,IAJD,CAIM,UAAUC,QAAV,EAAoB;AACxB,aAAON,QAAQ,IAAI;AACjBA,QAAAA,QAAQ,CAACO,YAAY,CAACD,QAAQ,CAACE,IAAV,CAAb,CAAR;AACAR,QAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAD,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAJD;AAKD,KAVD,EAWCO,KAXD,CAWO,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAbD;AAcD,GAnBD;AAoBD;;AAED,SAAST,eAAT,CAAyBY,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAElB,CAAC,CAACmB,iBADH;AAELF,IAAAA;AAFK,GAAP;AAID;;AAED,SAASX,eAAT,CAAyBc,cAAzB,EAAyC;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAElB,CAAC,CAACqB,iBADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASb,aAAT,CAAuBe,UAAvB,EAAmC;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAElB,CAAC,CAACuB,eADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASX,YAAT,CAAsBa,KAAtB,EAA6B;AAC3B,SAAO;AACLN,IAAAA,IAAI,EAAElB,CAAC,CAACyB,cADH;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,YAAT,CAAsBxB,QAAtB,EAAgCC,QAAhC,EAA0CwB,QAA1C,EAAoD,CAEnD","sourcesContent":["import axios from 'axios'\n\nimport * as c from '../redux/constants'\n\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    axios.post('http://localhost:3005/api/user/login', {\n      username: username,\n      password: password\n    })\n    .then(function (response) {\n      return dispatch => {\n        dispatch(setUserToken(response.data));\n        dispatch(setLoginPending(false));\n        dispatch(setLoginSuccess(true));\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: c.SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: c.SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: c.SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction setUserToken(token) {\n  return {\n    type: c.SET_USER_TOKEN,\n    token\n  }\n}\n\nfunction callLoginApi(username, password, callback) {\n\n}\n"]},"metadata":{},"sourceType":"module"}